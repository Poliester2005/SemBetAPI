name: Java Security Pipeline

on: ["push","pull_request"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build & Unit Tests
        run: mvn clean verify

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  sast:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Ensure SpotBugs output folder exists
        run: mkdir -p target/site

      - name: Run SpotBugs (SAST)
        run: mvn com.github.spotbugs:spotbugs-maven-plugin:4.8.6.2:spotbugs \
             -Dspotbugs.reportFormat=html \
             -Dspotbugs.includeTests=false \
             -Dspotbugs.failOnError=false || true

      - name: Ensure SpotBugs reports exist
        run: |
          touch target/site/spotbugs.html target/spotbugsXml.xml

      - name: Upload SpotBugs Report
        uses: actions/upload-artifact@v4
        with:
          name: SpotBugs-Report
          path: |
            target/site/spotbugs.html
            target/spotbugsXml.xml

  sca:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3

      - name: Ensure Dependency-Check report folder exists
        run: mkdir -p ./dc-report

      - name: Download Dependency-Check
        run: |
          curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip -o dc.zip
          unzip dc.zip -d dc

      - name: Run Dependency-Check Offline (SCA)
        run: |
          ./dc/dependency-check/bin/dependency-check.sh \
            --project "MeuApp" \
            --scan . \
            --format "HTML" \
            --out ./dc-report/dependency-check-report.html \
            --cveValidForHours 168 \
            --disableAssembly || true
          ./dc/dependency-check/bin/dependency-check.sh \
            --project "MeuApp" \
            --scan . \
            --format "JSON" \
            --out ./dc-report/dependency-check-report.json \
            --cveValidForHours 168 \
            --disableAssembly || true

      - name: Ensure Dependency-Check reports exist
        run: |
          touch ./dc-report/dependency-check-report.html
          touch ./dc-report/dependency-check-report.json

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        with:
          name: Dependency-Check-Report
          path: |
            ./dc-report/dependency-check-report.html
            ./dc-report/dependency-check-report.json

  dast:
    runs-on: ubuntu-latest
    needs: [sast, sca]
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Run App in Background
        run: mvn spring-boot:run &

      - name: Wait for App Startup
        run: sleep 30

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: 'http://localhost:8080'
          format: 'HTML'
          report: 'zap-report.html'
          fail: false

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP-Report
          path: zap-report.html
