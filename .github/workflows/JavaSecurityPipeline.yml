name: Java Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build & Unit Tests
        run: mvn clean verify

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar

  sast:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Run SpotBugs (SAST)
        run: mvn com.github.spotbugs:spotbugs-maven-plugin:4.8.6.2:spotbugs

      - name: Upload SpotBugs Report
        uses: actions/upload-artifact@v3
        with:
          name: SpotBugs-Report
          path: |
            target/site/spotbugs.html
            target/spotbugsXml.xml

  sca:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3

      - name: Download Dependency-Check
        run: |
          curl -L https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip -o dc.zip
          unzip dc.zip -d dc

      - name: Run Dependency-Check (SCA)
        run: ./dc/dependency-check/bin/dependency-check.sh --project "MeuApp" --scan . --format "ALL" --out ./dc-report

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v3
        with:
          name: Dependency-Check-Report
          path: ./dc-report/*

  dast:
    runs-on: ubuntu-latest
    needs: [sast, sca]
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Run App in Background
        run: mvn spring-boot:run &
      
      - name: Wait for App Startup
        run: sleep 30

      - name: Run OWASP ZAP (DAST)
        run: |
          docker run -t --network="host" owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:8080 \
            -r zap-report.html \
            -w zap-report.md \
            -J zap-report.json

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP-Report
          path: |
            zap-report.html
            zap-report.md
            zap-report.json
